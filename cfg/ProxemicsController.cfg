#! /usr/bin/env python
PACKAGE = 'proxemics'
import roslib;roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# TF frame ID parameters
gen.add("robot_frame_id", str_t, SensorLevels.RECONFIGURE_RUNNING, "The TF frame ID (name) of the robot.", "/robot/base_link")
gen.add("human_frame_id", str_t, SensorLevels.RECONFIGURE_RUNNING, "The TF frame ID (name) of the human.", "/human/base_link")

# proxemic goal state parameters
gen.add("goal_range_robot_to_human", double_t, SensorLevels.RECONFIGURE_RUNNING, "The desired range/distance (in meters) from the robot to the human.", 1.5, 0.25, 5.0)
gen.add("goal_angle_robot_to_human", double_t, SensorLevels.RECONFIGURE_RUNNING, "The desired angle/bearing (in degrees) from the robot to the human.", 0.0, -180.0, 180.0)
gen.add("goal_angle_human_to_robot", double_t, SensorLevels.RECONFIGURE_RUNNING, "The desired angle/bearing (in degrees) from the human to the robot.", 0.0, -180.0, 180.0)

# min/max speed parameters
gen.add("min_speed_lin_x", double_t, SensorLevels.RECONFIGURE_RUNNING, "The minimum linear-x speed (in meters/second).", 0.01, 0.0, 2.0)
gen.add("max_speed_lin_x", double_t, SensorLevels.RECONFIGURE_RUNNING, "The maximum linear-x speed (in meters/second).", 1.5, 0.0, 2.0)
gen.add("min_speed_lin_y", double_t, SensorLevels.RECONFIGURE_RUNNING, "The minimum linear-y speed (in meters/second).", 0.01, 0.0, 2.0)
gen.add("max_speed_lin_y", double_t, SensorLevels.RECONFIGURE_RUNNING, "The maximum linear-y speed (in meters/second).", 1.5, 0.0, 2.0)
gen.add("min_speed_ang_z", double_t, SensorLevels.RECONFIGURE_RUNNING, "The minimum angular-z speed (in degrees/second).", 1.0, 0.0, 360.0)
gen.add("max_speed_ang_z", double_t, SensorLevels.RECONFIGURE_RUNNING, "The maximum angular-z speed (in degrees/second).", 90.0, 0.0, 360.0)

# linear/angular proportional (P) gain parameters
gen.add("gain_p_lin_x", double_t, SensorLevels.RECONFIGURE_RUNNING, "The linear-x proportional (P) gain.", 1.0, 0.0, 10.0)
gen.add("gain_p_lin_y", double_t, SensorLevels.RECONFIGURE_RUNNING, "The linear-y proportional (P) gain.", 1.0, 0.0, 10.0)
gen.add("gain_p_ang_z", double_t, SensorLevels.RECONFIGURE_RUNNING, "The angular-z proportional (P) gain.", 1.0, 0.0, 10.0)

# linear/angular derivative (D) gain parameters
gen.add("gain_d_lin_x", double_t, SensorLevels.RECONFIGURE_RUNNING, "The linear-x derivative (D) gain.", 0.0, 0.0, 10.0)
gen.add("gain_d_lin_y", double_t, SensorLevels.RECONFIGURE_RUNNING, "The linear-y derivative (D) gain.", 0.0, 0.0, 10.0)
gen.add("gain_d_ang_z", double_t, SensorLevels.RECONFIGURE_RUNNING, "The angular-z derivative (D) gain.", 0.0, 0.0, 10.0)

exit(gen.generate(PACKAGE, "proxemics", "ProxemicsController"))
